Camera = {}
Camera.__index = Camera

Camera.DEGREES = math.deg

local function LEVEL_AREA_INDEX(levelNum, areaNum)
	return bit.lshift(levelNum, 4)+areaNum
end

Camera.AREA_BBH = LEVEL_AREA_INDEX(LEVEL_BBH, 1)
Camera.AREA_CCM_OUTSIDE = LEVEL_AREA_INDEX(LEVEL_CCM, 1)
Camera.AREA_CCM_SLIDE = LEVEL_AREA_INDEX(LEVEL_CCM, 2)
Camera.AREA_CASTLE_LOBBY = LEVEL_AREA_INDEX(LEVEL_CASTLE, 1)
Camera.AREA_CASTLE_TIPPY = LEVEL_AREA_INDEX(LEVEL_CASTLE, 2)
Camera.AREA_CASTLE_BASEMENT = LEVEL_AREA_INDEX(LEVEL_CASTLE, 3)
Camera.AREA_HMC = LEVEL_AREA_INDEX(LEVEL_HMC, 1)
Camera.AREA_SSL_OUTSIDE = LEVEL_AREA_INDEX(LEVEL_SSL, 1)
Camera.AREA_SSL_PYRAMID = LEVEL_AREA_INDEX(LEVEL_SSL, 2)
Camera.AREA_SSL_EYEROK = LEVEL_AREA_INDEX(LEVEL_SSL, 3)
Camera.AREA_BOB = LEVEL_AREA_INDEX(LEVEL_BOB, 1)
Camera.AREA_SL_OUTSIDE = LEVEL_AREA_INDEX(LEVEL_SL, 1)
Camera.AREA_SL_IGLOO = LEVEL_AREA_INDEX(LEVEL_SL, 2)
Camera.AREA_WDW_MAIN = LEVEL_AREA_INDEX(LEVEL_WDW, 1)
Camera.AREA_WDW_TOWN = LEVEL_AREA_INDEX(LEVEL_WDW, 2)
Camera.AREA_JRB_MAIN = LEVEL_AREA_INDEX(LEVEL_JRB, 1)
Camera.AREA_JRB_SHIP = LEVEL_AREA_INDEX(LEVEL_JRB, 2)
Camera.AREA_THI_HUGE = LEVEL_AREA_INDEX(LEVEL_THI, 1)
Camera.AREA_THI_TINY = LEVEL_AREA_INDEX(LEVEL_THI, 2)
Camera.AREA_THI_WIGGLER = LEVEL_AREA_INDEX(LEVEL_THI, 3)
Camera.AREA_TTC = LEVEL_AREA_INDEX(LEVEL_TTC, 1)
Camera.AREA_RR = LEVEL_AREA_INDEX(LEVEL_RR, 1)
Camera.AREA_CASTLE_GROUNDS = LEVEL_AREA_INDEX(LEVEL_CASTLE_GROUNDS, 1)
Camera.AREA_BITDW = LEVEL_AREA_INDEX(LEVEL_BITDW, 1)
Camera.AREA_VCUTM = LEVEL_AREA_INDEX(LEVEL_VCUTM, 1)
Camera.AREA_BITFS = LEVEL_AREA_INDEX(LEVEL_BITFS, 1)
Camera.AREA_SA = LEVEL_AREA_INDEX(LEVEL_SA, 1)
Camera.AREA_BITS = LEVEL_AREA_INDEX(LEVEL_BITS, 1)
Camera.AREA_LLL_OUTSIDE = LEVEL_AREA_INDEX(LEVEL_LLL, 1)
Camera.AREA_LLL_VOLCANO = LEVEL_AREA_INDEX(LEVEL_LLL, 2)
Camera.AREA_DDD_WHIRLPOOL = LEVEL_AREA_INDEX(LEVEL_DDD, 1)
Camera.AREA_DDD_SUB = LEVEL_AREA_INDEX(LEVEL_DDD, 2)
Camera.AREA_WF = LEVEL_AREA_INDEX(LEVEL_WF, 1)
Camera.AREA_ENDING = LEVEL_AREA_INDEX(LEVEL_ENDING, 1)
Camera.AREA_COURTYARD = LEVEL_AREA_INDEX(LEVEL_CASTLE_COURTYARD, 1)
Camera.AREA_PSS = LEVEL_AREA_INDEX(LEVEL_PSS, 1)
Camera.AREA_COTMC = LEVEL_AREA_INDEX(LEVEL_COTMC, 1)
Camera.AREA_TOTWC = LEVEL_AREA_INDEX(LEVEL_TOTWC, 1)
Camera.AREA_BOWSER_1 = LEVEL_AREA_INDEX(LEVEL_BOWSER_1, 1)
Camera.AREA_WMOTR = LEVEL_AREA_INDEX(LEVEL_WMOTR, 1)
Camera.AREA_BOWSER_2 = LEVEL_AREA_INDEX(LEVEL_BOWSER_2, 1)
Camera.AREA_BOWSER_3 = LEVEL_AREA_INDEX(LEVEL_BOWSER_3, 1)
Camera.AREA_TTM_OUTSIDE = LEVEL_AREA_INDEX(LEVEL_TTM, 1)

local CAM_MODE_MARIO_ACTIVE = 0x01
local CAM_MODE_LAKITU_WAS_ZOOMED_OUT = 0x02
local CAM_MODE_MARIO_SELECTED = 0x04

local CAM_SELECTION_MARIO = 1
local CAM_SELECTION_FIXED = 2

local CAM_ANGLE_MARIO = 1
local CAM_ANGLE_LAKITU = 2

Camera.CAMERA_MODE_NONE = 0x00
Camera.CAMERA_MODE_RADIAL = 0x01
Camera.CAMERA_MODE_OUTWARD_RADIAL = 0x02
Camera.CAMERA_MODE_BEHIND_MARIO = 0x03
Camera.CAMERA_MODE_CLOSE = 0x04 -- Inside Castle / Big Boo's Haunt
Camera.CAMERA_MODE_C_UP = 0x06
Camera.CAMERA_MODE_WATER_SURFACE = 0x08
Camera.CAMERA_MODE_SLIDE_HOOT = 0x09
Camera.CAMERA_MODE_INSIDE_CANNON = 0x0A
Camera.CAMERA_MODE_BOSS_FIGHT = 0x0B
Camera.CAMERA_MODE_PARALLEL_TRACKING = 0x0C
Camera.CAMERA_MODE_FIXED = 0x0D
Camera.CAMERA_MODE_8_DIRECTIONS = 0x0E -- AKA Parallel Camera, Bowser Courses & Rainbow Road
Camera.CAMERA_MODE_FREE_ROAM = 0x10
Camera.CAMERA_MODE_SPIRAL_STAIRS = 0x11

local CAM_MOVE_RETURN_TO_MIDDLE = 0x0001
local CAM_MOVE_ZOOMED_OUT = 0x0002
local CAM_MOVE_ROTATE_RIGHT = 0x0004
local CAM_MOVE_ROTATE_LEFT = 0x0008
local CAM_MOVE_ENTERED_ROTATE_SURFACE = 0x0010
local CAM_MOVE_METAL_BELOW_WATER = 0x0020
local CAM_MOVE_FIX_IN_PLACE = 0x0040
local CAM_MOVE_UNKNOWN_8 = 0x0080
local CAM_MOVING_INTO_MODE = 0x0100
local CAM_MOVE_STARTED_EXITING_C_UP = 0x0200
local CAM_MOVE_UNKNOWN_11 = 0x0400
local CAM_MOVE_INIT_CAMERA = 0x0800
local CAM_MOVE_ALREADY_ZOOMED_OUT = 0x1000
local CAM_MOVE_C_UP_MODE = 0x2000
local CAM_MOVE_SUBMERGED = 0x4000
local CAM_MOVE_PAUSE_SCREEN = 0x8000

local CAM_MOVE_ROTATE = bit.bor(CAM_MOVE_ROTATE_RIGHT, CAM_MOVE_ROTATE_LEFT, CAM_MOVE_RETURN_TO_MIDDLE)
-- These flags force the camera to move a certain way
local CAM_MOVE_RESTRICT = bit.bor(CAM_MOVE_ENTERED_ROTATE_SURFACE, CAM_MOVE_METAL_BELOW_WATER, CAM_MOVE_FIX_IN_PLACE, CAM_MOVE_UNKNOWN_8)

local CAM_SOUND_C_UP_PLAYED = 0x01
local CAM_SOUND_MARIO_ACTIVE = 0x02
local CAM_SOUND_NORMAL_ACTIVE = 0x04
local CAM_SOUND_UNUSED_SELECT_MARIO = 0x08
local CAM_SOUND_UNUSED_SELECT_FIXED = 0x10
local CAM_SOUND_FIXED_ACTIVE = 0x20

local CAM_FLAG_SMOOTH_MOVEMENT = 0x0001
local CAM_FLAG_BLOCK_SMOOTH_MOVEMENT = 0x0002
local CAM_FLAG_FRAME_AFTER_CAM_INIT = 0x0004
local CAM_FLAG_CHANGED_PARTRACK_INDEX = 0x0008
local CAM_FLAG_CCM_SLIDE_SHORTCUT = 0x0010
local CAM_FLAG_CAM_NEAR_WALL = 0x0020
local CAM_FLAG_SLEEPING = 0x0040
local CAM_FLAG_UNUSED_7 = 0x0080
local CAM_FLAG_UNUSED_8 = 0x0100
local CAM_FLAG_COLLIDED_WITH_WALL = 0x0200
local CAM_FLAG_START_TRANSITION = 0x0400
local CAM_FLAG_TRANSITION_OUT_OF_C_UP = 0x0800
local CAM_FLAG_BLOCK_AREA_PROCESSING = 0x1000
local CAM_FLAG_UNUSED_13 = 0x2000
local CAM_FLAG_UNUSED_CUTSCENE_ACTIVE = 0x4000
local CAM_FLAG_BEHIND_MARIO_POST_DOOR = 0x8000

local CAM_STATUS_NONE = 0
local CAM_STATUS_MARIO = bit.lshift(1, 0)
local CAM_STATUS_LAKITU = bit.lshift(1, 1)
local CAM_STATUS_FIXED = bit.lshift(1, 2)
local CAM_STATUS_C_DOWN = bit.lshift(1, 3)
local CAM_STATUS_C_UP = bit.lshift(1, 4)

local CAM_STATUS_MODE_GROUP = bit.bor(CAM_STATUS_MARIO, CAM_STATUS_LAKITU, CAM_STATUS_FIXED)
local CAM_STATUS_C_MODE_GROUP = bit.bor(CAM_STATUS_C_DOWN, CAM_STATUS_C_UP)

local L_CBUTTONS = 0x0002
local R_CBUTTONS = 0x0001
local D_CBUTTONS = 0x0004
local U_CBUTTONS = 0x0008

Camera.CAM_EVENT_CANNON = 1
Camera.CAM_EVENT_SHOT_FROM_CANNON = 2
Camera.CAM_EVENT_UNUSED_3 = 3
Camera.CAM_EVENT_BOWSER_INIT = 4
Camera.CAM_EVENT_DOOR_WARP = 5
Camera.CAM_EVENT_DOOR = 6
Camera.CAM_EVENT_BOWSER_JUMP = 7
Camera.CAM_EVENT_BOWSER_THROW_BOUNCE = 8
Camera.CAM_EVENT_START_INTRO = 9
Camera.CAM_EVENT_START_GRAND_STAR = 10
Camera.CAM_EVENT_START_ENDING = 11
Camera.CAM_EVENT_START_END_WAVING = 12
Camera.CAM_EVENT_START_CREDITS = 13

-- EXPERIMENTAL, lose "CAMERA" prefix
Camera.EVENT_CANNON = 1
Camera.EVENT_SHOT_FROM_CANNON = 2
Camera.EVENT_UNUSED_3 = 3
Camera.EVENT_BOWSER_INIT = 4
Camera.EVENT_DOOR_WARP = 5
Camera.EVENT_DOOR = 6
Camera.EVENT_BOWSER_JUMP = 7
Camera.EVENT_BOWSER_THROW_BOUNCE = 8
Camera.EVENT_START_INTRO = 9
Camera.EVENT_START_GRAND_STAR = 10
Camera.EVENT_START_ENDING = 11
Camera.EVENT_START_END_WAVING = 12
Camera.EVENT_START_CREDITS = 13

Camera.SHAKE_ATTACK = 1
Camera.SHAKE_GROUND_POUND = 2
Camera.SHAKE_SMALL_DAMAGE = 3
Camera.SHAKE_MED_DAMAGE = 4
Camera.SHAKE_LARGE_DAMAGE = 5
Camera.SHAKE_HIT_FROM_BELOW = 8
Camera.SHAKE_FALL_DAMAGE = 9
Camera.SHAKE_SHOCK = 10

Camera.SHAKE_ENV_EXPLOSION = 1
Camera.SHAKE_ENV_BOWSER_THROW_BOUNCE = 2
Camera.SHAKE_ENV_BOWSER_JUMP = 3
Camera.SHAKE_ENV_UNUSED_5 = 5
Camera.SHAKE_ENV_UNUSED_6 = 6
Camera.SHAKE_ENV_UNUSED_7 = 7
Camera.SHAKE_ENV_PYRAMID_EXPLODE = 8
Camera.SHAKE_ENV_JRB_SHIP_DRAIN = 9
Camera.SHAKE_ENV_FALLING_BITS_PLAT = 10

Camera.SHAKE_FOV_SMALL = 1
Camera.SHAKE_FOV_UNUSED = 2
Camera.SHAKE_FOV_MEDIUM = 3
Camera.SHAKE_FOV_LARGE = 4

Camera.SHAKE_POS_SMALL = 1
Camera.SHAKE_POS_MEDIUM = 2
Camera.SHAKE_POS_LARGE = 3
Camera.SHAKE_POS_BOWLING_BALL = 4

Camera.CUTSCENE_DOOR_PULL = 130
Camera.CUTSCENE_DOOR_PUSH = 131
Camera.CUTSCENE_ENTER_CANNON = 133
Camera.CUTSCENE_ENTER_PAINTING = 134
Camera.CUTSCENE_DEATH_EXIT = 135
Camera.CUTSCENE_DOOR_WARP = 139
Camera.CUTSCENE_DOOR_PULL_MODE = 140
Camera.CUTSCENE_DOOR_PUSH_MODE = 141
Camera.CUTSCENE_INTRO_PEACH = 142
Camera.CUTSCENE_DANCE_ROTATE = 143
Camera.CUTSCENE_ENTER_BOWSER_ARENA = 144
Camera.CUTSCENE_0F_UNUSED = 145 -- Never activated, stub cutscene functions
Camera.CUTSCENE_UNUSED_EXIT = 147 -- Never activated
Camera.CUTSCENE_SLIDING_DOORS_OPEN = 149
Camera.CUTSCENE_PREPARE_CANNON = 150
Camera.CUTSCENE_UNLOCK_KEY_DOOR = 151
Camera.CUTSCENE_STANDING_DEATH = 152
Camera.CUTSCENE_DEATH_ON_STOMACH = 153
Camera.CUTSCENE_DEATH_ON_BACK = 154
Camera.CUTSCENE_QUICKSAND_DEATH = 155
Camera.CUTSCENE_SUFFOCATION_DEATH = 156
Camera.CUTSCENE_EXIT_BOWSER_SUCC = 157
Camera.CUTSCENE_EXIT_BOWSER_DEATH = 158 -- Never activated
Camera.CUTSCENE_WATER_DEATH = 159 -- Not in cutscene switch
Camera.CUTSCENE_EXIT_PAINTING_SUCC = 160
Camera.CUTSCENE_CAP_SWITCH_PRESS = 161
Camera.CUTSCENE_DIALOG = 162
Camera.CUTSCENE_RACE_DIALOG = 163
Camera.CUTSCENE_ENTER_PYRAMID_TOP = 164
Camera.CUTSCENE_DANCE_FLY_AWAY = 165
Camera.CUTSCENE_DANCE_CLOSEUP = 166
Camera.CUTSCENE_KEY_DANCE = 167
Camera.CUTSCENE_SSL_PYRAMID_EXPLODE = 168 -- Never activated
Camera.CUTSCENE_EXIT_SPECIAL_SUCC = 169
Camera.CUTSCENE_NONPAINTING_DEATH = 170
Camera.CUTSCENE_READ_MESSAGE = 171
Camera.CUTSCENE_ENDING = 172
Camera.CUTSCENE_STAR_SPAWN = 173
Camera.CUTSCENE_GRAND_STAR = 174
Camera.CUTSCENE_DANCE_DEFAULT = 175
Camera.CUTSCENE_RED_COIN_STAR_SPAWN = 176
Camera.CUTSCENE_END_WAVING = 177
Camera.CUTSCENE_CREDITS = 178
Camera.CUTSCENE_EXIT_WATERFALL = 179
Camera.CUTSCENE_EXIT_FALL_WMOTR = 180
Camera.CUTSCENE_ENTER_POOL = 181

-- Stop the cutscene.
Camera.CUTSCENE_STOP = 0x8000
-- Play the current cutscene shot indefinitely (until canceled).
Camera.CUTSCENE_LOOP = 0x7FFF

Camera.HAND_CAM_SHAKE_OFF = 0
Camera.HAND_CAM_SHAKE_CUTSCENE = 1
Camera.HAND_CAM_SHAKE_UNUSED = 2
Camera.HAND_CAM_SHAKE_HANG_OWL = 3
Camera.HAND_CAM_SHAKE_HIGH = 4
Camera.HAND_CAM_SHAKE_STAR_DANCE = 5
Camera.HAND_CAM_SHAKE_LOW = 6

local DOOR_DEFAULT = 0
local DOOR_LEAVING_SPECIAL = 1
local DOOR_ENTER_LOBBY = 2

-- Might rename these to reflect what they are used for instead "SET_45" etc.
Camera.CAM_FOV_SET_45 = 1
Camera.CAM_FOV_DEFAULT = 2
Camera.CAM_FOV_APP_45 = 4
Camera.CAM_FOV_SET_30 = 5
Camera.CAM_FOV_APP_20 = 6
Camera.CAM_FOV_BBH = 7
Camera.CAM_FOV_APP_80 = 9
Camera.CAM_FOV_APP_30 = 10
Camera.CAM_FOV_APP_60 = 11
Camera.CAM_FOV_ZOOM_30 = 12
Camera.CAM_FOV_SET_29 = 13

function Camera.new()
	local self = setmetatable({}, Camera)
	
	self.floor = nil
	
	self.gCameraMovementFlags = 0
	
	self.gPlayerCameraState = {
		action = 0,
		pos = Vector(0, 0, 0),
		faceAngle = Vector(0, 0, 0),
		headRotation = Vector(0, 0, 0),
		cameraEvent = 0,
		usedObj = nil
	}
	
	self.sFOVState = {
		fovFunc = 0,
		fov = 0.0
	}
	
	self.sMarioGeometry = {
		currFloorHeight = 0
	}
	
	self.sModeTransition = {
		posPitch = 0,
		posYaw = 0,
		posDist = 0,
		focPitch = 0,
		focYaw = 0,
		focDist = 0,
		framesLeft = 0,
		marioPos = Vector(0, 0, 0)
	}
	
	self.gLakituState = {
		curFocus = Vector(0.0, 0.0, 0.0),
		curPos = Vector(0.0, 0.0, 0.0),
		goalFocus = Vector(0.0, 0.0, 0.0),
		goalPos = Vector(0.0, 0.0, 0.0),

		shakeMagnitude = Vector(0.0, 0.0, 0.0),
		shakePitchPhase = 0,
		shakeYawPhase = 0,
		shakeRollPhase = 0,

		mode = 0,
		defMode = 0,

		roll = 0, yaw = 0,
		nextYaw = 0,

		focus = Vector(0, 0, 0),
		pos = Vector(0, 0, 0),

		lastFrameAction = 0,
		focHSpeed = 0, focVSpeed = 0,
		posHSpeed = 0, posVSpeed = 0,
		keyDanceRoll = 0
	}
	
	self.sOldPosition = Vector(0, 0, 0)
	self.sOldFocus = Vector(0, 0, 0)
	
	return self
end

CameraInstance = Camera.new()

geo_camera_main = CameraInstance.geo_camera_main
geo_camera_fov = CameraInstance.geo_camera_fov
